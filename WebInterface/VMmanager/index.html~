<!DOCTYPE html>
<html lang="en">
	<head>
		<meta http-equiv="content-type" content="text/html; charset=UTF-8">
		<meta charset="utf-8">
		<title>VM Management</title>
		<meta name="generator" content="Bootply" />
		<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
		<link href="css/bootstrap.min.css" rel="stylesheet">
		<!--[if lt IE 9]>
			<script src="//html5shim.googlecode.com/svn/trunk/html5.js"></script>
		<![endif]-->
		<link href="css/styles.css" rel="stylesheet">
	</head>
	<body>
<div class="page-container">
  
	<!-- top navbar -->
    <nav class="navbar navbar-inverse navbar-fixed-top" role="navigation">
    	<div class="navbar-header">
           <button type="button" class="navbar-toggle" data-toggle="offcanvas" data-target=".sidebar-nav">
             <span class="icon-bar"></span>
             <span class="icon-bar"></span>
             <span class="icon-bar"></span>
           </button>
           <a class="navbar-brand" href="#">nist's IaaS</a>
    	</div>
    </nav>
      
    <div class="container-fluid">
      <div class="row row-offcanvas row-offcanvas-left">
        
        <!--sidebar-->
        <div class="col-xs-6 col-sm-3 sidebar-offcanvas" id="sidebar" role="navigation">
          <div data-spy="affix" data-offset-top="45" data-offset-bottom="90">
            <ul class="nav" id="sidebar-nav">
              <li><a href="#">Home</a></li>
              <li><a href="#overview">Service Overview</a></li>
              <li><a href="#how-to-use">How to use</a></li>
              <li><a href="#about">About us</a></li>
            </ul>
           </div>
        </div><!--/sidebar-->
  	
        <!--/main-->
        <div class="col-xs-12 col-sm-9" data-spy="scroll" data-target="#sidebar-nav">
          <div class="row">
           	 <div class="col-sm-6">

<!--Create VM-->
                <div class="well"> 
                     <form class="form-horizontal" role="form">
                      <h4>Create your VMs</h4><span style="color:#555555;">課金プランを選択後、VM 名を入力してください。</span>
                       <div class="form-group" style="padding:14px;">
          <input type="text" id="VMname" class="form-control input-lg" placeholder="VM name">
                      </div>
                      <button id="createButton" class="btn btn-success pull-right" type="button" style="margin-top: -1em;">Create</button><ul class="list-inline"><li><a href="#"><i class="glyphicon glyphicon-align-left"></i></a></li><li><a href="#"><i class="glyphicon glyphicon-align-center"></i></a></li><li><a href="#"><i class="glyphicon glyphicon-align-right"></i></a></li></ul>

                    </form>
                </div><!--/well-->

<!--List of VMs-->
                <div class="panel panel-default">
                  <div class="panel-heading"><a href="#" class="pull-right" id="deleteButton">Delete</a> <h4>Your VMs</h4></div>
                    <div class="panel-body">
                      <div class="list-group" id="vmList">
現在、あなたの管理する VM はありません。
                      </div>
                    </div><!--/panel-body-->
                </div><!--/panel-->
             
             
            </div><!--/col-->
            
            <div class="col-sm-6">
        
<!--料金プラン-->
              <div class="panel panel-default">
                 <div class="panel-heading"><a href="#" class="pull-right">View all</a> <h4>Payment Plan</h4></div>
                  <div class="panel-body">
      
                      <ul class="nav nav-tabs">
                        <li class="active"><a href="#A" data-toggle="tab">Plan A</a></li>
                        <li><a href="#B" data-toggle="tab">Plan B</a></li>
                        <li><a href="#C" data-toggle="tab">Plan C</a></li>
                      </ul>
                      <div class="tabbable">
                        <div class="tab-content">
                          <div class="tab-pane active" id="A">
                            <div class="well well-sm">Plan A (¥1000) では、100MB の通信量まで通信を行うことができます。</br>※ 100MB を超えますと通信が制限されますので、ご注意ください。</div>
<button id="planA" class="btn btn-primary pull-right">Select</button>
                          </div>
                          <div class="tab-pane" id="B">
                            <div class="well well-sm">Plan B (¥5000) では、1GB の通信量まで通信を行うことができます。</br>※ 1GB を超えますと通信が制限されますので、ご注意ください。</div>
<button id="planB" class="btn btn-primary pull-right">Select</button>
                          </div>
                          <div class="tab-pane" id="C">
                            <div class="well well-sm">Plan C (¥10000) では、10GB の通信量まで通信を行うことができます。</br>※ 10GB を超えますと通信が制限されますので、ご注意ください。</div>
<button id="planC" class="btn btn-primary pull-right">Select</button>
                          </div>
                        </div>
                      </div> <!-- /tabbable -->
                                        
                  </div><!--/panel-body-->
               </div> <!--/panel-->

<!--利用状況-->
              <div class="panel panel-default">
                 <div class="panel-heading"><a href="#" class="pull-right">View all</a> <h4>Status</h4></div>
                  <div id="VMstatus" class="panel-body">
料金プランが選択されていません。
                    
                  </div><!--/panel-body-->
              </div><!--/panel-->
              

              </div><!--/col-->
          </div><!--/row-->
    
          <h1 id="overview">Service Overview</h1>
          <p>本サービスは、お客様がこの上なく簡単に Web サイトを公開することを可能とするサービスです。</p>
<p></p>

<hr></hr>
          <h1 id="how-to-use">How to use</h1>
          <p>本サービスの利用手順は以下の通りです。</p>
<ol>
  <li>VM の名前を入力する。</li>
  <li>Create ボタンを押す。</li>
</ol>

<p>上記の手順によって VM が起動し、Web サービスが開始します。起動した Web サイトを閲覧するためには、"Your VMs" に表示されている IP アドレス、およびポート番号にアクセスします。</p>

<p>各 VM における Web 機能のご利用状況は、"Status" に反映されています。また、そのご利用状況に応じて、私たちがオススメする料金プランを "Recommended Plan" に表示しております。ぜひご活用ください。</p>

<p>本サービスの利用を停止したい場合、"Your VMs" 上部の Delete ボタンを押していただき、停止する VM 名を入力していただくと可能です。</p>

<hr></hr>
          <h1 id="about">About us</h1>
<p><img src="img/t-tanaka.jpg" class="img-circle pull-right" style="margin-right: 20px;">私たちのチーム名 nist はチームメンバーの頭文字、"N"gatomi Ken, "I"mai Tomoki, "S"akamoto Koki, "T"anaka Tatsuya に由来しています。</p>

        </div><!--/.col-xs-12-->
      </div><!--/.row-->
    </div>
  </div><!--/.container-->
</div><!--/.page-container-->
  
<footer><!--footer-->
  <div class="container">
      	<div class="row">
Team nist All Rights Reserved.
		</div><!--/row-->
    </div><!--/container-->
</footer>
        
	<!-- script references -->
		<script src="js/jquery.min.js"></script>
		<script src="js/bootstrap.min.js"></script>
		<script src="js/scripts.js"></script>
<script type="text/javascript" src="/socket.io/socket.io.js"></script>
<script>
var socket = io.connect();
var vmNames = []; // 現在起動しているVMの全名前
var vmNumber = 0; // 現在起動しているVMの数
var planSelectedFlag = false; // プランが選択されているか
var whichPlan; // 現在どのプランが選択されているか
var volTsushin; // 通信容量（プランによって変更）
var nowTsushin = 0; // 現在どれくらい使っているか
var limitedFlag = false; // 通信制限にかかったか

$("#createButton").click(function(){

  // 最初にプランが選択されているか確認
  if(!planSelectedFlag){
    alert('"Payment Plan" より、料金プランを選択してください。');
  } else {

  var vmName = $("#VMname").val();
  alert('Virtual Machine "'+vmName+'" が作成されました。');

  socket.emit('create', vmName, function(data){
  vmNames.push(vmName);
  vmNumber++;

  alert(data + " " +vmName+ " "+vmNumber);
  // Your VMs の中身を編集
  if(vmNumber == 1) {
    var vmList = document.getElementById('vmList');
    vmList.innerHTML = "";
    var li = document.createElement('a');
    li.textContent = vmName + " @ " + data;
    li.setAttribute('href','#');
    li.setAttribute('class','list-group-item active');
    li.setAttribute('id','vm-list-'+vmName);
    vmList.appendChild(li);
  } else {
    if(vmNumber % 2 == 1) {
    var vmList = document.getElementById('vmList');
    var li = document.createElement('a');
    li.textContent = vmName + " @ " + data;
    li.setAttribute('href','#');
    li.setAttribute('class','list-group-item active');
    li.setAttribute('id','vm-list-'+vmName);
    vmList.appendChild(li);
    } else {
    var vmList = document.getElementById('vmList');
    var li = document.createElement('a');
    li.textContent = vmName + " @ " + data;
    li.setAttribute('href','#');
    li.setAttribute('class','list-group-item');
    li.setAttribute('id','vm-list-'+vmName);
    vmList.appendChild(li);
    }
  }

  // 中身のクリア
  document.getElementById('VMname').value = "";
  });

  } // 料金プラン選択の if 文
});

$("#deleteButton").click(function(){
  var vmName = window.prompt("削除する VM の名前を入力してください。","");
  if(vmNames.indexOf(vmName) >= 0) {
    socket.emit('delete', vmName);
    alert('Virtual Machine "'+vmName+'" が削除されました。');
    var vmList = document.getElementById('vmList');
    var vm = document.getElementById('vm-list-'+vmName);
    // 1 個ずつ active をずらす
    for(var i=vmNames.indexOf(vmName); i<vmList.children.length; i++) {
      if(i % 2 == 1) {
        vmList.children[i].setAttribute('class','list-group-item active');
      } else {
        vmList.children[i].setAttribute('class','list-group-item');
      }
    }
    vmList.removeChild(vm);
    var nm = vmNames.indexOf(vmName);
    vmNames.splice(nm,1);
    vmNumber--;
    if(vmNumber == 0) {
      vmList.innerHTML = "現在、あなたの管理する VM はありません。";
    }
  } else {
    alert("現在、あなたの管理する VM にその名前の VM はありません。もう一度入力してください。");
  }
});

$("#planA").click(function(){

  // まだプランが選択されていなかったら
  if(!planSelectedFlag) {
  var planButton = document.getElementById('planA');
  planButton.textContent = "Selected";
  planButton.setAttribute('class','btn btn-danger pull-right');
  alert("Plan A が選択されました。通信料 100MB までご利用いただけます。");
  planSelectedFlag = true;
  whichPlan = "A";
  volTsushin = 100; // 通信容量
  
  // ステータスに追加
  var vmStatus = document.getElementById('VMstatus');
  if(vmNumber == 0){
    vmStatus.innerHTML = "";
  }
  var stH5 = document.createElement('h5');
  stH5.textContent = "Plan "+whichPlan+" ("+nowTsushin+"/"+volTsushin+")";
  stH5.setAttribute('id','use-rate');
  var stDiv = document.createElement('div');
  stDiv.setAttribute('class','progress');
  var stDivBar = document.createElement('div');
  stDivBar.setAttribute('id','status-bar');
  stDivBar.setAttribute('class','progress-bar progress-bar-info');
  stDivBar.setAttribute('style','width: 1%;');
  stDiv.appendChild(stDivBar);
  vmStatus.appendChild(stH5);
  vmStatus.appendChild(stDiv);

  socket.on('tsushin',function(data){ // 通信発生時に通信量カウント
    if(nowTsushin > volTsushin){
    } else {
    nowTsushin++;
    stH5.textContent = "Plan "+whichPlan+" ("+nowTsushin+"/"+volTsushin+")";    
    stDivBar.setAttribute('style','width: '+nowTsushin * 100 / volTsushin+'%;')
    if(nowTsushin == volTsushin * 0.5){
      stDivBar.setAttribute('class','progress-bar progress-bar-warning');
    }
    if(nowTsushin == volTsushin * 0.8){
      stDivBar.setAttribute('class','progress-bar progress-bar-danger');
      alert("現在選択されているプランの通信量の上限を超えるかもしれません。プランの変更をオススメします。");
    }
    if((nowTsushin >= volTsushin) && (nowTsushin <= volTsushin + vmNumber)){
      stH5.textContent = "Plan "+whichPlan+" (LIMITED)";
      if(!limitedFlag) { // 既に他のプロセスでアラートが表示されているか確認
        alert("現在選択されているプランの通信料の上限を超えたため、通信が制限されています。");
        limitedFlag = true;
      }
    }
    }
  });

  } else { // 既にプランが選択されていたら
    // plan A だったら
    if(whichPlan == "A"){
    } else {  // プラン変更時
  if(nowTsushin >= 100){
    alert("既にご利用の通信量が 100MB を超えているため、Plan A をご選択いただけません。");
  } else {
    var planButton = document.getElementById('planA');
    planButton.textContent = "Selected";
    planButton.setAttribute('class','btn btn-danger pull-right');
    alert("Plan A が選択されました。通信量 100MB までご利用いただけます。");

    // 他のプランの選択中ボタンを元に戻す
    var prePlanButton = document.getElementById('plan'+whichPlan);
    prePlanButton.textContent = "Select";
    prePlanButton.setAttribute('class','btn btn-info pull-right');
    whichPlan = "A";
    volTsushin = 100; // 通信容量

    // ステータスのプラン名変更
    var stPlanName = document.getElementById('use-rate');
    stPlanName.textContent = "Plan "+whichPlan+" ("+nowTsushin+"/"+volTsushin+")";

    // ステータスバーの色更新
    var barForColor = document.getElementById('status-bar');
    if(nowTsushin <= volTsushin * 0.5){
      barForColor.setAttribute('class','progress-bar progress-bar-info');
    } else if(nowTsushin >= volTsushin * 0.8) {
      barForColor.setAttribute('class','progress-bar progress-bar-danger');
    } else {
      barForColor.setAttribute('class','progress-bar progress-bar-warning');
    }
  } // nowTsushin
    }// whichPlan 
  }
});

$("#planB").click(function(){

  // まだプランが選択されていなかったら
  if(!planSelectedFlag) {
  var planButton = document.getElementById('planB');
  planButton.textContent = "Selected";
  planButton.setAttribute('class','btn btn-danger pull-right');
  alert("Plan B が選択されました。通信料 1GB までご利用いただけます。");
  planSelectedFlag = true;
  whichPlan = "B";
  volTsushin = 1000; // 通信容量

  // ステータスに追加
  var vmStatus = document.getElementById('VMstatus');
  if(vmNumber == 0){
    vmStatus.innerHTML = "";
  }
  var stH5 = document.createElement('h5');
  stH5.textContent = "Plan "+whichPlan+" ("+nowTsushin+"/"+volTsushin+")";
  stH5.setAttribute('id','use-rate');
  var stDiv = document.createElement('div');
  stDiv.setAttribute('class','progress');
  var stDivBar = document.createElement('div');
  stDivBar.setAttribute('id','status-bar');
  stDivBar.setAttribute('class','progress-bar progress-bar-info');
  stDivBar.setAttribute('style','width: 1%;');
  stDiv.appendChild(stDivBar);
  vmStatus.appendChild(stH5);
  vmStatus.appendChild(stDiv);

  socket.on('tsushin',function(data){ // 通信発生時に通信量カウント
    if(nowTsushin > volTsushin){
    } else {
    nowTsushin++;
    stH5.textContent = "Plan "+whichPlan+" ("+nowTsushin+"/"+volTsushin+")";    
    stDivBar.setAttribute('style','width: '+nowTsushin * 100 / volTsushin+'%;')
    if(nowTsushin == volTsushin * 0.5){
      stDivBar.setAttribute('class','progress-bar progress-bar-warning');
    }
    if(nowTsushin == volTsushin * 0.8){
      stDivBar.setAttribute('class','progress-bar progress-bar-danger');
      alert("現在選択されているプランの通信量の上限を超えるかもしれません。プランの変更をオススメします。");
    }
    if((nowTsushin >= volTsushin) && (nowTsushin <= volTsushin + vmNumber)){
      stH5.textContent = "Plan "+whichPlan+" (LIMITED)";
      alert("現在選択されているプランの通信料の上限を超えたため、通信が制限されています。");
    }
    }
  });

  } else { // 既にプランが選択されていたら
    // plan B だったら
    if(whichPlan == "B"){
    } else {
  if(nowTsushin >= 1000){
    alert("既にご利用の通信量が 1GB を超えているため、Plan B をご選択いただけません。");
  } else {
  var planButton = document.getElementById('planB');
  planButton.textContent = "Selected";
  planButton.setAttribute('class','btn btn-danger pull-right');
  alert("Plan B が選択されました。通信料 1GB までご利用いただけます。");
      // 他のプランの選択中ボタンを元に戻す
      var prePlanButton = document.getElementById('plan'+whichPlan);
      prePlanButton.textContent = "Select";
      prePlanButton.setAttribute('class','btn btn-info pull-right');
    whichPlan = "B";
    volTsushin = 1000; // 通信容量

    // ステータスのプラン名変更
    var stPlanName = document.getElementById('use-rate');
    stPlanName.textContent = "Plan "+whichPlan+" ("+nowTsushin+"/"+volTsushin+")";

    // ステータスバーの色更新
    var barForColor = document.getElementById('status-bar');
    if(nowTsushin <= volTsushin * 0.5){
      barForColor.setAttribute('class','progress-bar progress-bar-info');
    } else if(nowTsushin >= volTsushin * 0.8) {
      barForColor.setAttribute('class','progress-bar progress-bar-danger');
    } else {
      barForColor.setAttribute('class','progress-bar progress-bar-warning');
    }
  }
    }
  }
});

$("#planC").click(function(){

  // まだプランが選択されていなかったら
  if(!planSelectedFlag) {
  var planButton = document.getElementById('planC');
  planButton.textContent = "Selected";
  planButton.setAttribute('class','btn btn-danger pull-right');
  alert("Plan C が選択されました。通信料 10GB までご利用いただけます。");
  planSelectedFlag = true;
  whichPlan = "C";
  volTsushin = 10000; // 通信容量

  // ステータスに追加
  var vmStatus = document.getElementById('VMstatus');
  if(vmNumber == 0){
    vmStatus.innerHTML = "";
  }
  var stH5 = document.createElement('h5');
  stH5.textContent = "Plan "+whichPlan+" ("+nowTsushin+"/"+volTsushin+")";
  stH5.setAttribute('id','use-rate');
  var stDiv = document.createElement('div');
  stDiv.setAttribute('class','progress');
  var stDivBar = document.createElement('div');
  stDivBar.setAttribute('id','status-bar');
  stDivBar.setAttribute('class','progress-bar progress-bar-info');
  stDivBar.setAttribute('style','width: 1%;');
  stDiv.appendChild(stDivBar);
  vmStatus.appendChild(stH5);
  vmStatus.appendChild(stDiv);

  socket.on('tsushin',function(data){ // 通信発生時に通信量カウント
    if(nowTsushin > volTsushin){
    } else {
    nowTsushin++;
    stH5.textContent = "Plan "+whichPlan+" ("+nowTsushin+"/"+volTsushin+")";    
    stDivBar.setAttribute('style','width: '+nowTsushin * 100 / volTsushin+'%;')
    if(nowTsushin == volTsushin * 0.5){
      stDivBar.setAttribute('class','progress-bar progress-bar-warning');
    }
    if(nowTsushin == volTsushin * 0.8){
      stDivBar.setAttribute('class','progress-bar progress-bar-danger');
      alert("現在選択されているプランの通信量の上限を超えるかもしれません。プランの変更をオススメします。");
    }
    if((nowTsushin >= volTsushin) && (nowTsushin <= volTsushin + vmNumber)){
      stH5.textContent = "Plan "+whichPlan+" (LIMITED)";
      alert("現在選択されているプランの通信料の上限を超えたため、通信が制限されています。");
    }
    }
  });

  } else { // 既にプランが選択されていたら
    // plan A だったら
    if(whichPlan == "C"){
    } else {
  var planButton = document.getElementById('planC');
  planButton.textContent = "Selected";
  planButton.setAttribute('class','btn btn-danger pull-right');
  alert("Plan C が選択されました。通信料 10GB までご利用いただけます。");
      // 他のプランの選択中ボタンを元に戻す
      var prePlanButton = document.getElementById('plan'+whichPlan);
      prePlanButton.textContent = "Select";
      prePlanButton.setAttribute('class','btn btn-info pull-right');
    whichPlan = "C";
    volTsushin = 10000; // 通信容量

    // ステータスのプラン名変更
    var stPlanName = document.getElementById('use-rate');
    stPlanName.textContent = "Plan "+whichPlan+" ("+nowTsushin+"/"+volTsushin+")";

    // ステータスバーの色更新
    var barForColor = document.getElementById('status-bar');
    if(nowTsushin <= volTsushin * 0.5){
      barForColor.setAttribute('class','progress-bar progress-bar-info');
    } else if(nowTsushin >= volTsushin * 0.8) {
      barForColor.setAttribute('class','progress-bar progress-bar-danger');
    } else {
      barForColor.setAttribute('class','progress-bar progress-bar-warning');
    }
    }
  }
});


</script>

	</body>
</html>
